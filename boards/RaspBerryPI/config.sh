BUILD_CONFIG="${ARMSTRAP_CONFIG,,}"
BUILD_CPU="armv6"
BUILD_ARCH="arm"

if [ -z "${ARMSTRAP_LANG}" ]; then
  BUILD_LANG="${LANG}"
else
  BUILD_LANG="${ARMSTRAP_LANG}"
fi

if [ -z "${ARMSTRAP_LANGUAGE}" ]; then
  BUILD_LANGUAGE="${LANGUAGE}"
else
  BUILD_LANGUAGE="${ARMSTRAP_LANGUAGE}"
fi

BUILD_LANG_EXTRA="${ARMSTRAP_LANG_EXTRA}"
 
if [ -z "${ARMSTRAP_TIMEZONE}" ]; then
  BUILD_TIMEZONE="America/Montreal"
else
  BUILD_TIMEZONE="${ARMSTRAP_TIMEZONE}"
fi

BUILD_ARMBIAN_ROOTFS_LIST="rpi-wheezy"

case "${ARMSTRAP_OS}" in
  *)
    ARMSTRAP_OS="rpi-wheezy"
    BUILD_ARMBIAN_ROOTFS="http://armstrap.vls.beaupre.biz/rootfs/raspbian-wheezy-armv6l-hf.txz"
    BUILD_ARMBIAN_SUITE="rpi-wheezy"
    BUILD_ARMBIAN_RECONFIG="${ARMSTRAP_DPKG_RECONFIG}"
    ;;
esac
  
BUILD_MNT_ROOT="${ARMSTRAP_MNT}"
  
# Not all packages can be install this way.
BUILD_DPKG_EXTRAPACKAGES="${ARMSTRAP_DEBIAN_EXTRAPACKAGES}"
  
# Theses are packages included with or generated by the script. The script will automatically include .deb files in the dpkg directory
BUILD_DPKG_LOCALPACKAGES=""
  
BUILD_SERIALCON_ID="T0"
BUILD_SERIALCON_RUNLEVEL="2345"
BUILD_SERIALCON_TERM="ttyAMA0"
BUILD_SERIALCON_SPEED="115200"
BUILD_SERIALCON_TYPE="vt100"

#No spaces allowed in each definitions...
BUILD_FSTAB=("proc:/proc:proc:defaults:0:0" "/dev/mmcblk0p1:/boot:vfat:defaults:0:2" "/dev/mmcblk0p2:/:ext4:defaults,noatime:0:1")
 
BUILD_KERNEL_MODULES=""
  
if [ -z ${ARMSTRAP_ROOT_DEV} ]; then
  BUILD_ROOT_DEV="/dev/mmcblk0p2"
else
  BUILD_ROOT_DEV="${ARMSTRAP_ROOT_DEV}"
fi

#BUILD_MAC_VENDOR=0x000246
  
BUILD_CONFIG_CMDLINE="console=tty0 console=${BUILD_SERIALCON_TERM},${BUILD_SERIALCON_SPEED} hdmi.audio=EDID:0 disp.screen0_output_mode=EDID:1280x720p60 root=${BUILD_ROOT_DEV} rootwait panic=10"
  
BUILD_DISK_LAYOUT=("2:/boot:fat32:128" "1:/:ext4:-1")

#############################################################################
#
# Kernel builder stuff
#
BUILD_KBUILDER="Yes"
BUILD_KBUILDER_TYPE="bcmrpi"
if [ -z "${ARMSTRAP_KBUILDER_CONF}" ]; then
  BUILD_KBUILDER_CONF="default"
else
  BUILD_KBUILDER_CONF="${ARMSTRAP_KBUILDER_CONF}"
fi
BUILD_KBUILDER_ARCH="${BUILD_ARCH}"
BUILD_KBUILDER_FAMILLY="${BUILD_CONFIG}"
BUILD_KBUILDER_SOURCE="${ARMSTRAP_SRC}/${BUILD_CONFIG}/linux-rpi"
BUILD_KBUILDER_CONFIG="${ARMSTRAP_BOARDS}/${ARMSTRAP_CONFIG}/kernel"
BUILD_KBUILDER_GITSRC="https://github.com/raspberrypi/linux.git"
BUILD_KBUILDER_GITBRN="rpi-3.6.y"
BUILD_KBUILDER_CFLAGS="-march=armv6 -mfpu=vfp -mfloat-abi=hard"
BUILD_KBUILDER_MKIMAGE="${ARMSTRAP_BOARDS}/${ARMSTRAP_CONFIG}/tools/mkimage"
BUILD_KBUILDER_PREHOOK="rpiFirmware"

#############################################################################
#
# Raspberry Firmware
#
BUILD_FIRMWARE="Yes"
BUILD_FIRMWARE_SOURCE="${ARMSTRAP_SRC}/${BUILD_CONFIG}/firmware"
BUILD_FIRMWARE_GITSRC="https://github.com/raspberrypi/firmware.git"
BUILD_FIRMWARE_GITBRN=""

#############################################################################
#
# U-Boot Stuff
#
BUILD_UBUILDER="No"

#############################################################################
#
# Sunxi-Boards Stuff
#
BUILD_SBUILDER="No"

BUILD_ARMBIAN_EXTRACT="tar -xJ"
BUILD_ARMBIAN_COMPRESS="tar -cJvf"

#############################################################################
#
# Sunxi-Tools Stuff
#
BUILD_TBUILDER="No"

#############################################################################
#
# Script Add-Ons
#
# if not empty, theses scripts will be sourced at initialisation. Useful to 
# replace or add functions.
BUILD_INIT_SCRIPTS="rpi.sh"
# if not empty, this function will be called before building the board.
# No parameters will be passed to the funtion.
BUILD_INIT_FUNCTION=""
# if not empty, theses scripts will be sources before building the board.
# Useful to provide a custom build function.
BUILD_INSTALL_SCRIPTS=""
# if not empty, this function will be call to build the board instead of the
# default one. No parameters will be passed to the funtion.
BUILD_INSTALL_FUNCTION=""

#############################################################################
#
# Host configuration
#
# Add any prerequisition the board need to be build. 
BUILD_PREREQ="u-boot-tools qemu qemu-user-static parted kpartx lvm2 binfmt-support libusb-1.0-0-dev dosfstools libncurses5-dev"
